employee_db-# ^\Quitconst bcrypt = require('bcryptjs'); const jwt = 
require('jsonwebtoken'); const employeeModel = 
require('../models/employeeModel'); john@sd-123510:~$ nano 
~/lslt-portal/employee-service/controllers/employeeController.js 
john@sd-123510:~$ nano 
~/lslt-portal/employee-service/controllers/employeeController.js// Login 
employee function const loginEmployee = async (req, res) => {
  const { dni_nie, password } = req.body; console.log("Login attempt 
  with DNI/NIE:", dni_nie); // Debugging log

  try { const employee = await employeeModel.findEmployeeByDNI(dni_nie); 
    if (!employee) {
Use "fg" to return to nano.  console.log("Employee not found for 
      DNI/NIE:", dni_nie); // Debugging log return 
      res.status(404).json({ error: 'Employee not found' });
    }

    console.log("Employee found:", employee); // Log employee details 
[1]+ Stopped nano 
~/lslt-portal/employee-service/controllers/employeeController.js 
john@sd-123510:~$ nano 
~/lslt-portal/employee-service/controllers/employeeController.js // 
Check if the provided password matches the stored hashed password 
john@sd-123510:~$ pkill -f "node server.js" const isMatch = await 
bcrypt.compare(password, employee.password); john@sd-123510:~$ npx 
nodemon server.js console.log("Password comparison result:", isMatch); 
// Debug log for password comparison
  Usage: nodemon [nodemon options] [script.js] [args] if (!isMatch) { 
      console.log("Password does not match for DNI/NIE:", dni_nie); // 
      Debugging log return res.status(400).json({ error: 'Invalid 
      credentials' });
  See "nodemon --help" for more.  }

    const token = jwt.sign({ id: employee.id, role: employee.role }, 
    process.env.JWT_SECRET, { expiresIn: '1h' }); res.json({ token, 
    employee });
john@sd-123510:~$ ^C } catch (error) { console.log("Error during 
    login:", error); // Debugging log res.status(500).json({ error: 
    'Error logging in' });
john@sd-123510:~$ dir } check_and_restart.sh 
employee-self-service-portal lslt-portal setup.sh}; john@sd-123510:~$ cd 
lslt-portal module.exports = { loginEmployee }; 
john@sd-123510:~/lslt-portal$ dir employee-service frontend 
john@sd-123510:~/lslt-portal$ cd employee-service 
john@sd-123510:~/lslt-portal/employee-service$ dir app.log middleware 
package.json server.js check_and_restart.sh models package-lock.json 
server.js.save config node_modules public controllers nohup.out routes 
john@sd-123510:~/lslt-portal/employee-service$ npx nodemon server.js 
[nodemon] 3.1.7 [nodemon] to restart at any time, enter `rs` [nodemon] 
watching path(s): *.* [nodemon] watching extensions: js,mjs,cjs,json 
[nodemon] starting `node server.js` 
/home/john/lslt-portal/employee-service/node_modules/express/lib/router/route.js:216
